# Test Cases for RAG Evaluation

This JSON file contains test cases for evaluating RAG systems in the context of Japanese software development.

Each test case includes:
- question: The question or requirement to be evaluated
- ground_truth: The expected answer based on historical documents
- tags: Tags for categorizing the test case (e.g., security, database, API)

[
  {
    "id": 1,
    "question": "How should we implement user authentication in our new Japanese language learning app?",
    "ground_truth": "For the Japanese language learning app, implement OAuth 2.0 with JWT tokens for secure authentication, use bcrypt for password hashing, and implement multi-factor authentication for enhanced security based on our previous project experiences.",
    "tags": ["security", "authentication"]
  },
  {
    "id": 2,
    "question": "What database design approach should we use for storing vocabulary data?",
    "ground_truth": "Based on our previous experience, use a PostgreSQL database with a dedicated vocabulary table that includes fields for Japanese words, multiple translations, example sentences, and difficulty levels. Implement full-text search for efficient vocabulary lookup.",
    "tags": ["database", "vocabulary"]
  },
  {
    "id": 3,
    "question": "How can we optimize API performance for serving lesson content?",
    "ground_truth": "Implement caching mechanisms for frequently accessed lesson content. Use CDN for static assets. Implement pagination for large datasets. Apply database indexing on frequently queried fields. Compress API responses using gzip.",
    "tags": ["api", "performance"]
  }
]